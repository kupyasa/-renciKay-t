/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package öğrencikayıt;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.lang.Object;

/**
 *
 * @author Yakup
 */
public class KayıtlarıListele extends javax.swing.JFrame {

    ArrayList<Öğrenci> öğrenciler;

    /**
     * Creates new form KayıtlarıListele
     */
    public KayıtlarıListele() {
        initComponents();
        öğrenciler = new ArrayList<Öğrenci>();
        arrayListiDoldur();
        Object[][] veri = new Object[öğrenciler.size()][8];

        for (int i = 0; i < öğrenciler.size(); i++) {
            veri[i][0] = öğrenciler.get(i).ad;
            veri[i][1] = öğrenciler.get(i).soyad;
            veri[i][2] = öğrenciler.get(i).öğrenciNo;
            veri[i][3] = öğrenciler.get(i).bölüm;
            veri[i][4] = öğrenciler.get(i).cinsiyet;
            veri[i][5] = öğrenciler.get(i).doğumYeri;
            veri[i][6] = öğrenciler.get(i).yaş;
            veri[i][7] = öğrenciler.get(i).telefonNo;

        }

        kayıtTable.setModel(new javax.swing.table.DefaultTableModel(
                veri,
                new String[]{
                    "Ad", "Soyad", "Öğrenci Numarası", "Bölümü", "Cinsiyet", "Doğum Yeri", "Yaş", "Telefon Numarası"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        kayıtTable.setAutoCreateRowSorter(true);
    }

    public void arrayListiDoldur() {
        try {
            FileInputStream file = new FileInputStream("ogrenciler.dat");
            ObjectInput inputFile = new ObjectInputStream(file);

            boolean dosyaSonu = false;
            while (!dosyaSonu) {
                try {
                    öğrenciler.add((Öğrenci) inputFile.readObject());
                } catch (EOFException e) {
                    dosyaSonu = true;
                } catch (Exception f) {
                    JOptionPane.showMessageDialog(null, f.getMessage());
                }
            }
            inputFile.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kayıtListelePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kayıtTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kayıt Listele");
        setResizable(false);

        kayıtListelePanel.setBackground(new java.awt.Color(0, 180, 180));

        kayıtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ad", "Soyad", "Öğrenci Numarası", "Bölümü", "Cinsiyet", "Doğum Yeri", "Yaş", "Telefon Numarası"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(kayıtTable);

        javax.swing.GroupLayout kayıtListelePanelLayout = new javax.swing.GroupLayout(kayıtListelePanel);
        kayıtListelePanel.setLayout(kayıtListelePanelLayout);
        kayıtListelePanelLayout.setHorizontalGroup(
            kayıtListelePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayıtListelePanelLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        kayıtListelePanelLayout.setVerticalGroup(
            kayıtListelePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayıtListelePanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kayıtListelePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kayıtListelePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KayıtlarıListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KayıtlarıListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KayıtlarıListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KayıtlarıListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KayıtlarıListele().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel kayıtListelePanel;
    private javax.swing.JTable kayıtTable;
    // End of variables declaration//GEN-END:variables
}
